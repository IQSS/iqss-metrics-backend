# .github/workflows/build.yml

name: generate iqss stat data

on: [workflow_dispatch]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          pipenv install --deploy --dev

      - name: Add ssh deploy key
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.IQSS_DASHBOARD_SSH_DEPLOY_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa github.com

      - run: make build run
        env:
          SHEET_URL_BUSINESS_OPERATIONS: ${{ secrets.SHEET_URL_BUSINESS_OPERATIONS }}
          SHEET_URL_CSS: ${{ secrets.SHEET_URL_CSS }}
          SHEET_URL_PSR: ${{ secrets.SHEET_URL_PSR }}
          SHEET_URL_MAIN_AND_RESEARCH_COMPUTING: ${{ secrets.SHEET_URL_MAIN_AND_RESEARCH_COMPUTING }}
          SHEET_URL_DATAVERSE: ${{ secrets.SHEET_URL_DATAVERSE }}
          SHEET_URL_CGA_LICENSE_REQUEST: ${{ secrets.SHEET_URL_CGA_LICENSE_REQUEST }}
          SHEET_URL_CGA_TRAINING_REGISTRATION: ${{ secrets.SHEET_URL_CGA_TRAINING_REGISTRATION }}
          SHEET_URL_CGA_EVENT_REGISTRATION: ${{ secrets.SHEET_URL_CGA_EVENT_REGISTRATION }}
          SHEET_URL_CGA_GIS_APPLICATION: ${{ secrets.SHEET_URL_CGA_GIS_APPLICATION }}
          SHEET_URL_CGA_CONTACT: ${{ secrets.SHEET_URL_CGA_CONTACT }}
          SHEET_URL_CGA_WORKSHOP_EVALUATIONS: ${{ secrets.SHEET_URL_CGA_WORKSHOP_EVALUATIONS }}
          RT_USER: ${{ secrets.RT_USER }}
          RT_PASSWORD: ${{ secrets.RT_PASSWORD }}

